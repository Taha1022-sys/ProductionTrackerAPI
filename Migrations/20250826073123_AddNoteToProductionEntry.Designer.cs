// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductionTrackerAPI.Data;

#nullable disable

namespace ProductionTrackerAPI.Migrations
{
    [DbContext(typeof(ProductionDbContext))]
    [Migration("20250826073123_AddNoteToProductionEntry")]
    partial class AddNoteToProductionEntry
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProductionTrackerAPI.Models.ProductionEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BagsPerBox")
                        .HasColumnType("int");

                    b.Property<int>("CountTakenFromTable")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("FormCount")
                        .HasColumnType("int");

                    b.Property<decimal>("GeneralErrorRate")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ItemsPerPackage")
                        .HasColumnType("int");

                    b.Property<int>("KnittingError")
                        .HasColumnType("int");

                    b.Property<decimal>("KnittingErrorRate")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MachineNo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("MatchingPersonnelCount")
                        .HasColumnType("int");

                    b.Property<int>("MeasurementError")
                        .HasColumnType("int");

                    b.Property<decimal>("MeasurementErrorRate")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MkCycleSpeed")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ModelNo")
                        .HasColumnType("int");

                    b.Property<int>("MoldNo")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int>("OtherDefect")
                        .HasColumnType("int");

                    b.Property<decimal>("OtherDefectRate")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("PackagesPerBag")
                        .HasColumnType("int");

                    b.Property<string>("PhotoPath")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("RemainingOnTableCount")
                        .HasColumnType("int");

                    b.Property<int>("Shift")
                        .HasColumnType("int");

                    b.Property<string>("SizeNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("Steam")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TablePersonnelCount")
                        .HasColumnType("int");

                    b.Property<int>("TableTotalPackage")
                        .HasColumnType("int");

                    b.Property<int>("ToeDefect")
                        .HasColumnType("int");

                    b.Property<decimal>("ToeDefectRate")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TotalDefects")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ProductionEntries");
                });

            modelBuilder.Entity("ProductionTrackerAPI.Models.ProductionSummary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CalculatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("KnittingErrorCount")
                        .HasColumnType("int");

                    b.Property<decimal>("KnittingErrorDozen")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("KnittingErrorRate")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MeasurementErrorCount")
                        .HasColumnType("int");

                    b.Property<decimal>("MeasurementErrorDozen")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MeasurementErrorRate")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("OtherDefectCount")
                        .HasColumnType("int");

                    b.Property<decimal>("OtherDefectDozen")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OtherDefectRate")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OverallErrorRate")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ToeDefectCount")
                        .HasColumnType("int");

                    b.Property<decimal>("ToeDefectDozen")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ToeDefectRate")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TotalErrorCount")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalErrorCountDozen")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TotalTableCount")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalTableCountDozen")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("ProductionSummaries");
                });
#pragma warning restore 612, 618
        }
    }
}
